PLUS = '+'
MINUS = '-'
MUL = '*'
DIV = '/'
FLOORDIV = '//'
MOD = '%'
POWER = '**'
BINARY_AND = '&'
BINARY_OR = '|'
BINARY_XOR = '^'
BINARY_ONES_COMPLIMENT = '~'
BINARY_LEFT_SHIFT = '<<'
BINARY_RIGHT_SHIFT = '>>'
LPAREN = '('
RPAREN = ')'
LSQUAREBRACKET = '[' #TODO
RSQUAREBRACKET = ']' #TODO
LCURLYBRACKET = '{' #TODO
RCURLYBRACKET = '}' #TODO
COMMA = ',' #TODO
COLON = ':' #TODO
DOT = '.' #TODO
ELIPSIS = '...' #TODO
ARROW = '->' #TODO
CAST = '::'
ASSIGN = '='
PLUS_ASSIGN = '+='
MINUS_ASSIGN = '-='
MUL_ASSIGN = '*='
DIV_ASSIGN = '/='
FLOORDIV_ASSIGN = '//='
MOD_ASSIGN = '%='
POWER_ASSIGN = '**='
EQUALS = '=='
NOT_EQUALS = '!='
LESS_THAN = '<'
GREATER_THAN = '>'
LESS_THAN_OR_EQUAL_TO = '<='
GREATER_THAN_OR_EQUAL_TO = '>='
DECORATOR = '@' #TODO
TYPE = 'TYPE'
ANY = 'any'
INT = 'int'
DEC = 'dec'
COMPLEX = 'complex' #TODO
STR = 'str'
BOOL = 'bool' #TODO
BYTES = 'bytes' #TODO
LIST = 'list' #TODO
TUPLE = 'tuple' #TODO
DICT = 'dict' #TODO
ENUM = 'enum' #TODO
FUNC = 'func'
NULLTYPE = 'nulltype'
TRUE = 'true'
FALSE = 'false'
NULL = 'null'
NAN = 'nan'
INF = 'inf'
NEGATIVE_INF = '-inf'
IF = 'if'
ELSE = 'else'
FOR = 'for' #TODO
WHILE = 'while'
SWITCH = 'switch' #TODO
CASE = 'case' #TODO
DEFAULT = 'default' #TODO
CLASS = 'class' #TODO
SUPER = 'super' #TODO
THIS = 'this' #TODO
RETURN = 'return'
TEST = 'test' #TODO
TRY = 'try' #TODO
CATCH = 'catch' #TODO
FINALLY = 'finally' #TODO
THEN = 'then' #TODO
YIELD = 'yield' #TODO
BREAK = 'break' #TODO
CONTINUE = 'continue' #TODO
DEL = 'del' #TODO
FROM = 'from' #TODO
IMPORT = 'import' #TODO
WILDCARD = '*' #TODO
WITH = 'with' #TODO
AS = 'as' #TODO
PASS = 'pass' #TODO
VOID = 'void' #TODO
RAISE = 'raise' #TODO
UNION = 'union' #TODO
STRUCT = 'struct' #TODO
REQUIRE = 'require' #TODO
ENSURE = 'ensure' #TODO
OVERRIDE = 'override' #TODO
DOC = 'doc' #TODO
ABSTRACT = 'abstract' #TODO
PROP = 'prop' #TODO
GET = 'get' #TODO
SET = 'set' #TODO
ASSERT = 'assert' #TODO
AND = 'and' #TODO
OR = 'or' #TODO
NOT = 'not' #TODO
IN = 'in' #TODO
NOT_IN = 'not in' #TODO
IS = 'is' #TODO
IS_NOT = 'is not' #TODO

ARITHMETIC_OP = (PLUS, MINUS, MUL, DIV, MOD, FLOORDIV, POWER)
ASSIGNMENT_OP = (ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, FLOORDIV_ASSIGN, MOD_ASSIGN, POWER_ASSIGN)
COMPARISON_OP = (EQUALS, NOT_EQUALS, LESS_THAN, GREATER_THAN, GREATER_THAN_OR_EQUAL_TO, LESS_THAN_OR_EQUAL_TO)
LOGICAL_OP = (AND, OR, NOT)
BINARY_OP = (BINARY_AND, BINARY_OR, BINARY_XOR, BINARY_ONES_COMPLIMENT, BINARY_LEFT_SHIFT, BINARY_RIGHT_SHIFT)
MEMBERSHIP_OP = (IN, NOT_IN)
IDENTITY_OP = (IS, IS_NOT)
OPERATORS = (
	LPAREN, RPAREN, LSQUAREBRACKET, RSQUAREBRACKET, LCURLYBRACKET,
	RCURLYBRACKET, COMMA, COLON, DOT, DECORATOR, CAST,
) + ARITHMETIC_OP + ASSIGNMENT_OP + COMPARISON_OP + LOGICAL_OP + BINARY_OP + MEMBERSHIP_OP + IDENTITY_OP
KEYWORDS = (
	IF, ELSE, WHILE, FOR, SWITCH, CASE, CLASS, SUPER, THIS, RETURN, TEST, TRY, CATCH, FINALLY,
	THEN, YIELD, BREAK, CONTINUE, DEL, IMPORT, FROM, WITH, AS, PASS, VOID, RAISE,
	UNION, STRUCT, REQUIRE, ENSURE, OVERRIDE, DOC, ABSTRACT, PROP, GET, SET, ASSERT
)
TYPES = (ANY, INT, DEC, COMPLEX, STR, BOOL, BYTES, LIST, TUPLE, DICT, ENUM, FUNC, NULLTYPE)
CONSTANTS = (TRUE, FALSE, NULL, NAN, INF, NEGATIVE_INF)

NUMBER = 'NUMBER'
STRING = 'STRING'
CONSTANT = 'CONSTANT'
NEWLINE = 'NEWLINE'
INDENT = 'INDENT'
KEYWORD = 'KEYWORD'
NAME = 'NAME'
EOF = 'END'

ALPHANUMERIC = 'alphanumeric'
NUMERIC = 'numeric'
OPERATIC = 'operatic'
WHITESPACE = 'whitespace'
COMMENT = 'comment'
ESCAPE = 'escape'